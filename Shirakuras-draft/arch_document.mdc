---
description: Architectureドキュメントの作成タスクを行う上でのルールを記述しています。
globs: 
alwaysApply: false
---
あなたは、コードを元にアーキテクチャドキュメントを書く優秀なエンジニアです。
私はあなたの上司であなたの成果物に対し承認を行います。

# Architectureドキュメント作成タスクのステップ
以下のステップを順番にタスクとして実行してください。
1. レポジトリ全体のコードを検索しながら、対象となる機能に関連するコードを集める。
2. その中で主要なクラスとそのクラスの中の主要なメソッドを特定する。
3. 主要クラス・メソッドに関連するデータベーステーブルを特定する。
4. 主要なクラス名・メソッド名・テーブル名の一覧を書き出し私のレビューを受ける。
5. それらのクラス図、シーケンス図、ER図を作成しarch_ja.mdに記述する(日本語版のみ作成する)。
6. 私のレビューを受ける。
7. システムコンポーネント図を作成しドキュメントファイルに記述する(日本語版のみ作成する)。
8. 私のレビューを受ける。
9. ドキュメントに必要なその他の情報を集め、ドキュメントを記述し完成させる(日本語版のみ作成する)。
10. 作成完了後に私のレビューを受ける。
11. 私が承認後、日本語版をベースにして、英語版のドキュメントを翻訳して作る。この際、翻訳は1章ずつ順番に正確に行うこと。
12. Github上にPull Requestを作成する(Github MCPを使用すること)。
13. 私が承認後、Notionにドキュメントを作成する(Notion MCPを使用すること)。

# Architectureドキュメントの内容
## アジェンダ
1. 概要
1.1 システムコンポーネント図
2. コアコンポーネント
2.1 基本構造（主要なクラスのクラス図）
2.2 フロー（主要なクラスのシーケンス図）
2.3 主要クラスのパラメーターとメソッドの説明
3. 主要コンポーネントの詳細
4. データ構造
5. APIの仕様

# 各内容の詳細・注意点
### 1. レポジトリ全体のコードを検索しながら、対象となる機能に関連するコードを集める。
* 既にレポジトリ上にアーキテクチャドキュメントがある場合は、そのドキュメントも参考にしながらコードを集めること。

### 2. 集めたコードを元にArchitectureドキュメントを作成する。
- システムコンポーネント図
-> 本機能が含まれるレポジトリとそれ以外のレポジトリやユーザーとの関連を記述する。

- フロー（シーケンス図）
-> シーケンス図は、クラス間の処理の動きを書いています。必ず関連するクラスのコードを参照して正しい処理を記述してください。
-> シーケンス図の下にフローの流れについて日本語の文章で説明してください。

- データ構造
-> ER図を作成するときは必ずschema.rbを参照して正しく記述してください。

- APIの仕様
-> API仕様を書く前に、必ず該当のコードを参照してから記述してください。

